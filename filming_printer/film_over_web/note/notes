


https://chriscoughlin.com/2012/07/numpy-over-a-network/
server.py

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
from SimpleXMLRPCServer import SimpleXMLRPCServer
from SimpleXMLRPCServer import SimpleXMLRPCRequestHandler
import numpy as np
class RequestHandler(SimpleXMLRPCRequestHandler):
    rpc_paths = ('/RPC2',)

# Create server
server = SimpleXMLRPCServer(("", 8000),
                            requestHandler=RequestHandler)
server.register_introspection_functions()

def minmax(x):
    print("== request for minmax made ==")
    an_array = np.array(x)
    print("\tReceived NumPy array of {0} elements, shape {1}.\n".format(an_array.size, an_array.shape))
    return (np.min(an_array).tolist(), np.max(an_array).tolist())
server.register_function(minmax, 'minmax')

# Run the server's main loop
server.serve_forever()
client.py

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
import xmlrpclib
import numpy as np

an_array = np.genfromtxt("slice350.csv", delimiter=",")
srvr = xmlrpclib.ServerProxy("http://192.168.1.100:8000/RPC2")
# Return list of available functions
print("Functions available from server:")
available_functions = srvr.system.listMethods()
for func in available_functions:
    print("\t{0}".format(func))

# Call remote minmax function
print("\nRequesting minimum and maximum values of input array...")
arr_min, arr_max = srvr.minmax(an_array.tolist())
# Compare local result with returned result
print("Returned min and max of array: {0}, {1}".format(arr_min, arr_max))
print("Calculated min and max of array: {0}, {1}".format(np.min(an_array), np.max(an_array)))